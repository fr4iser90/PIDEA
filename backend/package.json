{
  "name": "PIDEA-backend",
  "version": "1.0.3",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js --watch  --ext js,json",
    "dev:frontend": "node dev-server.js",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:frontend\"",
    "test": "jest",
    "test:with-alias": "npm run test:ensure-alias && jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:coverage:md": "npx jest --coverage --coverageReporters=text > coverage.txt && node scripts/test-management/coverage-to-md.js",
    "test:management": "TEST_MANAGEMENT_ENABLED=true jest",
    "test:legacy-scan": "node scripts/test-management/legacy-detector.js ./tests",
    "test:status-track": "node scripts/test-management/test-status-tracker.js track jest-results.json",
    "test:version": "node scripts/test-management/test-versioner.js version",
    "version:sync-commits": "node -e \"const CentralVersionManager = require('./config/version/CentralVersionManager'); const manager = new CentralVersionManager(); manager.syncCommitCount();\"",
    "test:report": "node scripts/test-management/test-reporter.js report --format markdown --output test-report.md",
    "test:report:full": "node scripts/test-management/test-reporter.js report --format markdown --output test-report-full.md --full-output",
    "test:health": "node scripts/test-management/test-reporter.js health",
    "test:export": "node scripts/test-management/test-reporter.js export test-data.json",
    "test:full": "npm run test && npm run test:coverage && npm run test:export && npm run test:report && npm run test:report:full && npm run test:coverage:md",
    "test:reports-only": "npm run test:export && npm run test:report && npm run test:report:full && npm run test:coverage:md",
    "test:generate-reports": "node scripts/generate-test-reports.js",
    "test:ensure-alias": "node scripts/test-management/ensure-module-alias.js",
    "test:ensure-alias:analyze": "node scripts/test-management/ensure-module-alias.js --analyze",
    "test:correction": "node scripts/test-correction/index.js",
    "test:auto-fix": "node scripts/test-correction/index.js auto-fix",
    "test:auto-fix:watch": "node scripts/test-correction/index.js auto-fix --watch",
    "test:auto-fix:legacy": "node scripts/test-correction/index.js auto-fix --legacy",
    "test:auto-fix:complex": "node scripts/test-correction/index.js auto-fix --complex",
    "test:coverage-improve": "node scripts/test-correction/index.js coverage-improve",
    "test:coverage-improve:target": "node scripts/test-correction/index.js coverage-improve --target",
    "test:refactor": "node scripts/test-correction/index.js refactor",
    "test:refactor:complex": "node scripts/test-correction/index.js refactor --complex",
    "test:refactor:legacy": "node scripts/test-correction/index.js refactor --legacy",
    "test:refactor:slow": "node scripts/test-correction/index.js refactor --slow",
    "test:correction-status": "node scripts/test-correction/index.js status",
    "test:correction-report": "node scripts/test-correction/index.js report",
    "test:analysis-excludes": "node scripts/test-analysis-excludes.js",
    "fix:task-priorities": "node scripts/fix-task-priorities.js",
    "lint": "eslint ",
    "lint:fix": "eslint  --fix",
    "build": "echo 'No build step required for Node.js application'",
    "clean": "rm -rf node_modules package-lock.json",
    "security:audit": "node scripts/security-audit.js",
    "security:fix": "npm audit fix",
    "security:check": "npm audit --audit-level=moderate",
    "analyze-dom": "node scripts/dom-analyzer.js && node scripts/coverage-validator.js && node scripts/selector-generator.js",
    "auto-collect-dom": "node scripts/auto-dom-collector.js",
    "full-analysis": "npm run auto-collect-dom && npm run analyze-dom",
    "quick-check": "node scripts/coverage-validator.js quick",
    "migrate": "node scripts/migrate.js",
    "seed": "node scripts/seed.js",
    "db:setup": "npm run migrate && npm run seed",
    "refactor-imports": "node scripts/refactor-imports.js",
    "setup": "node scripts/dev-setup.js",
    "postinstall": "node -e \"console.log('Postinstall completed')\""
  },
  "keywords": [
    "cursor",
    "ide",
    "chat",
    "playwright",
    "ddd",
    "architecture"
  ],
  "author": "",
  "license": "ISC",
  "description": "Cursor IDE Chat Agent with DDD Architecture",
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "chalk": "^5.4.1",
    "cli-progress": "^3.12.0",
    "cli-table3": "^0.6.5",
    "commander": "^11.1.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "detect-libc": "^2.0.4",
    "dotenv": "^16.3.1",
    "express": "^5.1.0",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^1.6.0",
    "express-validator": "^7.2.1",
    "fs-extra": "^11.2.0",
    "glob": "^11.0.3",
    "helmet": "^7.1.0",
    "helmet-csp": "^3.4.0",
    "hpp": "^0.2.3",
    "inquirer": "^9.3.7",
    "joi": "^17.11.0",
    "jsdom": "^23.0.1",
    "jsonwebtoken": "^9.0.2",
    "moment": "^2.30.1",
    "morgan": "^1.10.0",
    "ora": "^7.0.1",
    "pg": "^8.11.3",
    "playwright": "^1.44.0",
    "sharp": "^0.34.2",
    "socket.io": "^4.7.2",
    "sqlite3": "^5.1.7",
    "uuid": "^9.0.1",
    "winston": "^3.17.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/preset-env": "^7.28.0",
    "babel-jest": "^30.0.5",
    "babel-plugin-module-resolver": "^5.0.2",
    "chai": "^5.2.1",
    "chokidar": "^3.5.3",
    "concurrently": "^8.2.2",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "mocha": "^11.7.1",
    "module-alias": "^2.2.3",
    "nodemon": "^3.0.2",
    "sinon": "^21.0.0",
    "supertest": "^6.3.3"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "bin": {
    "task": "./cli/index.js"
  },
  "_moduleAliases": {
    "@steps": "./domain/steps",
    "@logging": "./infrastructure/logging",
    "@domain": "./domain",
    "@application": "./application",
    "@infrastructure": "./infrastructure",
    "@presentation": "./presentation",
    "@tests": "./tests",
    "@cli": "./cli",
    "@scripts": "./scripts",
    "@commands": "./application/commands",
    "@handlers": "./application/handlers",
    "@workflows": "./domain/workflows",
    "@frameworks": "./domain/frameworks",
    "@entities": "./domain/entities",
    "@repositories": "./domain/repositories",
    "@services": "./domain/services",
    "@value-objects": "./domain/value-objects",
    "@messaging": "./infrastructure/messaging",
    "@database": "./infrastructure/database",
    "@external": "./infrastructure/external",
    "@auth": "./infrastructure/auth",
    "@auto": "./infrastructure/auto",
    "@security": "./infrastructure/security",
    "@templates": "./infrastructure/templates",
    "@strategies": "./infrastructure/strategies",
    "@controllers": "./presentation/api/controllers",
    "@websocket": "./presentation/websocket",
    "@api": "./presentation/api",
    "@config": "./config"
  }
}
